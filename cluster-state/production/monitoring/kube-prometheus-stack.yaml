apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack-global
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "45.9.1"
    helm:
      values: |
        fullnameOverride: kube-prometheus-stack
        commonLabels:
          prometheus: main

        defaultRules:
          create: true

        kubeScheduler:
          enabled: true

        kubeEtcd:
          enabled: true

        kubeProxy:
          enabled: false

        kubeControllerManager:
          enabled: false

        kubeStateMetrics:
          enabled: true

        kube-state-metrics:
          prometheus:
            monitor:
              enabled: true
              additionalLabels:
                prometheus: main
          fullnameOverride: kube-state-metrics

        prometheus-node-exporter:
          fullnameOverride: node-exporter
          hostRootFsMount:
            enabled: false
          prometheus:
            monitor:
              enabled: true
              additionalLabels:
                prometheus: main

        coreDns:
          enabled: false

        kubeDns:
          enabled: false

        kubelet:
          enabled: true
          serviceMonitor:
            cAdvisor: false

        grafana:
          enabled: false
          forceDeployDatasources: true
          forceDeployDashboards: true
          sidecar:
            dashboards:
              multicluster:
                global:
                  enabled: false
                etcd:
                  enabled: false

        alertmanager:
          enabled: true
          ingress:
            enabled: false

          alertmanagerSpec:
            replicas: 1

            logFormat: json
            logLevel: info

            storage:
              volumeClaimTemplate:
                spec:
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 1Gi
            resources:
              requests:
                cpu: "100m"
                memory: 500Mi
              limits:
                cpu: "1"
                memory: 1Gi

        prometheus:
          enabled: true
          monitor:
            additionalLabels:
              prometheus: main

          serviceAccount:
            create: true
            name: "prometheus"

          ingress:
            enabled: true
            ingressClassName: "nginx-public"
            hosts:
              - alertmanager.example.com
            paths:
              - /
            tls:
              - hosts:
                  - alertmanager.example.com
                secretName: wildcard-example-cert

          prometheusSpec:
            serviceAccountName: prometheus
            enableAdminAPI: true
            disableCompaction: true
            scrapeInterval: 5s
            evaluationInterval: 15s
            retention: 2h
            enableFeatures:
              - "remote-write-receiver"
            additionalScrapeConfigsSecret:
              enabled: false
            storageSpec:
              volumeClaimTemplate:
                spec:
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 20Gi
            resources:
              requests:
                cpu: "100m"
                memory: 1Gi
            externalLabels:
              cluster: global-k8s
            image:
              registry: quay.io
              repository: prometheus/prometheus
              tag: v2.43.0
              sha: ""

            serviceMonitorSelector:
              matchLabels:
                prometheus: main
            podMonitorSelector:
              matchLabels:
                prometheus: main
            probeSelector:
              matchLabels:
                prometheus: main


  destination:
    name: in-cluster
    namespace: monitoring
  syncPolicy:
    automated:
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
